name: Deploy Frontend JLPWA Production
on:
  workflow_dispatch:
    inputs:
      version:
        description: Deploy latest release
        default: latest
        required: true
jobs:
  deploy-to-s3:
    name: Deploy Frontend JLPWA Production
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    strategy:
      matrix:
        node-version: [18.x]
    defaults:
      run:
        shell: bash
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
          
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: cardinalby/git-get-release-action@v1
        id: release-info
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ github.event.inputs.version }}
          
      
      - uses: robinraju/release-downloader@v1.7
        with:
          tag: ${{ steps.release-info.outputs.tag_name }}
          fileName: "jlpwa.zip"
              
      - name: Unzip Artifact
        run: unzip -o jlpwa.zip -d ${{ github.workspace }}

      - uses: jakejarvis/s3-sync-action@master
        name: Upload App to S3 Bucket
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_DEPLOY_PROD_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
          SOURCE_DIR: "dist"

      - name: Create CloudFront Cache Invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.PROD_JLPWA_CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_REGION: ${{ secrets.S3_BUCKET_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Slack notification for build
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: jet_deployments
          SLACK_MESSAGE: "Just built and deployed latest production version (${{ steps.release-info.outputs.tag_name }}) of JLPWA Prod at https://jl.jetstreamafrica.com"
          SLACK_TITLE: "AWS S3 Deployment"
          SLACK_USERNAME: "jetbot"
          SLACK_ICON_EMOJI: ":eyes:"
          SLACK_COLOR: ${{ job.status }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          MSG_MINIMAL: true
